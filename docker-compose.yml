version: '3.7'

name: 'baseclient'

services:
  postgres:
    container_name: baseclient_postgres
    image: postgres:13
    volumes:
      - ./.docker/db-init.sql:/docker-entrypoint-initdb.d/dev-init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    networks:
      - local_network

  mailhog:
    container_name: baseclient_mailhog
    image: mailhog/mailhog
    restart: unless-stopped
    logging:
      driver: 'none'
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - local_network

  rabbitmq:
    container_name: baseclient_rabbitmq
    image: rabbitmq:3.12-management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - local_network

  app:
    container_name: baseclient_app
    restart: always
    build:
      target: dependencies
    ports:
      - 3000:3000
    environment:
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    env_file:
      - .env
    volumes:
      - dependencies:/workspace/node_modules
      - .:/workspace
    tty: true
    networks:
      - local_network
    depends_on:
      - postgres
      - rabbitmq

networks:
  local_network:
    name: baseclient_network
    driver: bridge

volumes:
  dependencies:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./node_modules